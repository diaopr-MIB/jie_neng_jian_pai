#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>

// 定义引脚
const int pwmPin = 9; // PWM 输出引脚，用于控制电流大小
const int dirPin1 = 7; // 方向控制引脚 1，用于控制电流方向
const int dirPin2 = 8; // 方向控制引脚 2，用于控制电流方向
const int innerHumidityPin = A0; // 内部湿度传感器输入引脚
const int outerHumidityPin = A1; // 外部湿度传感器输入引脚
const int dhtPin = 2; // DHT11 数据引脚

// 初始化 DHT 传感器
#define DHTTYPE DHT11
DHT dht(dhtPin, DHTTYPE);

// OLED 显示屏定义
#define SCREEN_WIDTH 128 // OLED 显示屏宽度，单位：像素
#define SCREEN_HEIGHT 64 // OLED 显示屏高度，单位：像素
#define OLED_RESET -1 // 复位引脚（如果没有连接，设置为 -1）
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

void setup() {
    // 设置引脚模式
    pinMode(pwmPin, OUTPUT);
    pinMode(dirPin1, OUTPUT);
    pinMode(dirPin2, OUTPUT);
    pinMode(innerHumidityPin, INPUT);
    pinMode(outerHumidityPin, INPUT);
    Serial.begin(9600); // 初始化串口通信

    // 初始化 DHT 传感器
    dht.begin();

    // 初始化 OLED 显示屏
    if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // 默认 I2C 地址为 0x3C
        Serial.println(F("SSD1306 allocation failed"));
        for (;;);
    }
    display.display();
    delay(2000); // 让显示屏初始化
    display.clearDisplay();
}

void loop() {
    int innerHumidity = analogRead(innerHumidityPin); // 读取内部湿度传感器数据
    int outerHumidity = analogRead(outerHumidityPin); // 读取外部湿度传感器数据
    float dhtHumidity = dht.readHumidity(); // 读取 DHT11 湿度数据
    float dhtTemperature = dht.readTemperature(); // 读取 DHT11 温度数据

    // 检查是否读取失败
    if (isnan(dhtHumidity) || isnan(dhtTemperature)) {
        Serial.println("Failed to read from DHT sensor!");
        display.clearDisplay();
        display.setTextSize(1);
        display.setTextColor(SSD1306_WHITE);
        display.setCursor(0, 0);
        display.println("Failed to read from DHT sensor!");
        display.display();
        delay(2000);
        return;
    }

    int humidityDifference = innerHumidity - outerHumidity; // 计算湿度差

    // 输出调试信息到串口监视器
    Serial.print("Inner Humidity: ");
    Serial.print(innerHumidity);
    Serial.print(" Outer Humidity: ");
    Serial.print(outerHumidity);
    Serial.print(" DHT Humidity: ");
    Serial.print(dhtHumidity);
    Serial.print(" DHT Temperature: ");
    Serial.print(dhtTemperature);
    Serial.print(" Humidity Difference: ");
    Serial.println(humidityDifference);

    // 显示湿度值到 OLED 显示屏
    display.clearDisplay();
    display.setTextSize(1); // 设置文本大小
    display.setTextColor(SSD1306_WHITE); // 设置文本颜色
    display.setCursor(0, 0); // 设置光标位置
    display.print("Inner Humidity: ");
    display.println(innerHumidity);
    display.print("Outer Humidity: ");
    display.println(outerHumidity);
    display.print("DHT Humidity: ");
    display.println(dhtHumidity);
    display.print("DHT Temp: ");
    display.println(dhtTemperature);
    display.print("Humidity Diff: ");
    display.println(humidityDifference);

    // 根据湿度差决定电流方向和大小
    if (humidityDifference > 10) { // 湿度差大于 10，正向电流
        stopCurrent(); // 停止电流几秒钟
        digitalWrite(dirPin1, HIGH);
        digitalWrite(dirPin2, LOW);
        int pwmValue = map(humidityDifference, 10, 1023, 0, 255); // 将湿度差映射到 PWM 值
        analogWrite(pwmPin, pwmValue);
        display.print("Direction: Forward");
        Serial.print("Direction: Forward, PWM Value: ");
        Serial.println(pwmValue);
    } else if (humidityDifference < -10) { // 湿度差小于 -10，反向电流
        stopCurrent(); // 停止电流几秒钟
        digitalWrite(dirPin1, LOW);
        digitalWrite(dirPin2, HIGH);
        int pwmValue = map(-humidityDifference, 10, 1023, 0, 255); // 将湿度差映射到 PWM 值
        analogWrite(pwmPin, pwmValue);
        display.print("Direction: Reverse");
        Serial.print("Direction: Reverse, PWM Value: ");
        Serial.println(pwmValue);
    } else { // 湿度差在 -10 到 10 之间，停止电流
        stopCurrent();
        display.print("Direction: Stop");
        Serial.println("Direction: Stop");
    }

    display.display(); // 更新 OLED 显示屏
    delay(1000); // 每秒钟读取一次传感器数据
}

// 停止电流几秒钟
void stopCurrent() {
    analogWrite(pwmPin, 0); // 停止 PWM 输出
    delay(5000); // 停止 5 秒钟
}
